contract Leg {

    state InTransit;
    state Arrived {
        string arrivalDate;
        string destinationPort;
    }

    string departureDate;
    string originPort;
    Transport@Unowned carrier;

    Leg@InTransit(Transport@Unowned t, string ddepartureDate, string doriginPort) {
        ->InTransit(departureDate = ddepartureDate, originPort = doriginPort, carrier = t);
    }

    transaction getDepartureDate(Leg@Owned this) returns string {
        return departureDate;
    }

    transaction getOriginPort(Leg@Owned this) returns string {
        return originPort;
    }

    transaction getCarrier(Leg@Owned this) returns Transport@Unowned {
        return carrier;
    }


    transaction setArrival(Leg@InTransit >> Arrived this, string date, string port) {
        ->Arrived(arrivalDate = date, destinationPort = port);
    }
}

